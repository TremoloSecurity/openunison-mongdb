= MongoDB Integration

The MongoDB integration is designed to be used within OpenUnison and MyVD primarily as a way of adding additional data to 
an existing directory such as new attributes and groups.  It is not designed to replace an existing directory.

== Virtual Directory Insert

The MongoDB insert provides search capabilities via LDAP of a mongodb database.  Each collection maps to an OU.  Each document MUST have two attributes:

* unisonRdnAttributeName - The name of the attribute that stores the rdn of the directory object
* The attribute named in unisonRdnAttributeName

While not strictly required, an objectClass attribute should also be present for the objects to work consistently with LDAP.

At this time ONLY search capabilities are implemented.  For updates and modifications, see the provisioning target.

|===
| Class Name |  com.tremolosecurity.mongodb.myvd.MongoInsert
| url | A MongoDB connection url as defined by https://docs.mongodb.com/manual/reference/connection-string/  
| database | The name of the database to use
|===

== Attribute2DN Virtual Directory Insert

The Attribute2DN insert is useful for translating an attribute value to a full DN by doing a search.  This is useful
when using MongoDB for storing groups where a user identifier is stored in a document instead of a full DN.  This
insert will then translate that attribute into a full DN by searching for the user named in the attribute.

|===
| Class Name |  com.tremolosecurity.myvd.inserts.mapping.Attribute2DN
| attributeName | The name of the attribute in the document to map to a DN  
| searchBase | The DN of the base to start the search for the user account
| searchAttribute | The name of the attribute to search for
|===


== Provisioning Target

The MongoDB provisioning target provides the capability to provision users and user groups in a single
database.  It is meant to work with the virtual directory insert.  Both users and groups can be in
any collection.  While MongoDB has no sense of an "objectClass", this attribute is used to distinguish
between users and groups.  Group memberships are stored as an attribute value on a group with an identifier,
NOT a distinguished name.

=== Creating Groups

To create a group in MongoDB make sure the following attributes are added:

* unisonRdnAttributeName - Tells OpenUnison what the rdn will be
* The attribute named in unisonRdnAttributeName
* objectClass - To identify groups

[source,xml]
-----
<target name="mymongodb" className="com.tremolosecurity.mongodb.unison.MongoDBTarget">
    <params>
        <!-- The MongoDB connection url per https://docs.mongodb.com/manual/reference/connection-string/  -->
        <param name="url" value=""mongodb://dbs.tremolo.lan:27017"/>
        <!-- The name of the database to use -->
        <param name="database" value="unisonprov"/>
        <!-- The value of the "objectClass" attribute for users -->
        <param name="userObjectClass" value="inetOrgPerson"/>
        <!-- The rdn attribute for users -->
        <param name="userRDN" value="uid"/>
        <!-- The user identifier attribute -->
        <param name="userIdAttribute" value="uid" />
        <!-- The group identifier attribute -->
        <param name="groupIdAttribute" value="cn" />
        <!-- The group objectClass -->
        <param name="groupObjectClass" value="groupOfUniqueNames" />
        <!-- The rdn of group objects -->
        <param name="groupRDN" value="cn" />
        <!-- Group attribute that stores members -->
        <param name="groupMemberAttribute" value="uniqueMember" />
        <!-- The user attribute used as the value for group membership -->
        <param name="groupUserIdAttribute" value="uid" />
        <!-- If true, groups may point to users in the virtual directory that are NOT in MongoDB -->
        <param name="supportExternalUsers" value="true" />
        <!-- The name of the attribute to store the object's collection in -->
        <param name="collectionAttributeName" value="collection" />
        
    </params>
    <targetAttribute name="sn" source="sn" sourceType="user"/>
    <targetAttribute name="givenname" source="givenname" sourceType="user"/>
    <targetAttribute name="mail" source="mail" sourceType="user"/>
    <targetAttribute name="uid" source="uid" sourceType="user"/>
    <targetAttribute name="cn" source="cn" sourceType="user"/>
    <targetAttribute name="collection" source="collection" sourceType="user"/>
    <targetAttribute name="objectClass" source="objectClass" sourceType="user"/>
</target>
-----